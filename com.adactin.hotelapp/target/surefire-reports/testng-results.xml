<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="9" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="AdactinRegression" duration-ms="73105" started-at="2017-10-21T09:22:04Z" finished-at="2017-10-21T09:23:17Z">
    <groups>
    </groups>
    <test name="AdactinRegressionBasic" duration-ms="73105" started-at="2017-10-21T09:22:04Z" finished-at="2017-10-21T09:23:17Z">
      <class name="com.adactin.hotelapp.tests.AdactinLogin">
        <test-method status="PASS" signature="startClass(java.lang.String)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startClass" is-config="true" duration-ms="8743" started-at="2017-10-21T05:22:04Z" finished-at="2017-10-21T05:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startClass -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startMethod" is-config="true" duration-ms="50" started-at="2017-10-21T05:22:12Z" finished-at="2017-10-21T05:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.adactin.hotelapp.tests.AdactinLogin.LogValidateNoUserNoPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="LogValidateNoUserNoPassword()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="LogValidateNoUserNoPassword" duration-ms="1841" started-at="2017-10-21T05:22:12Z" finished-at="2017-10-21T05:22:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogValidateNoUserNoPassword -->
        <test-method status="PASS" signature="stopMethod(org.testng.ITestResult)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopMethod" is-config="true" duration-ms="5711" started-at="2017-10-21T05:22:14Z" finished-at="2017-10-21T05:22:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogValidateNoUserNoPassword status=SUCCESS method=AdactinLogin.LogValidateNoUserNoPassword()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopMethod -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startMethod" is-config="true" duration-ms="0" started-at="2017-10-21T05:22:20Z" finished-at="2017-10-21T05:22:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.adactin.hotelapp.tests.AdactinLogin.LogValidatePasswordOnly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="LogValidatePasswordOnly()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="LogValidatePasswordOnly" duration-ms="540" started-at="2017-10-21T05:22:20Z" finished-at="2017-10-21T05:22:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogValidatePasswordOnly -->
        <test-method status="PASS" signature="stopMethod(org.testng.ITestResult)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopMethod" is-config="true" duration-ms="5721" started-at="2017-10-21T05:22:20Z" finished-at="2017-10-21T05:22:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogValidatePasswordOnly status=SUCCESS method=AdactinLogin.LogValidatePasswordOnly()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopMethod -->
        <test-method status="PASS" signature="LogValidateUserAndPassword()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="LogValidateUserAndPassword" duration-ms="630" started-at="2017-10-21T05:22:26Z" finished-at="2017-10-21T05:22:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogValidateUserAndPassword -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startMethod" is-config="true" duration-ms="0" started-at="2017-10-21T05:22:26Z" finished-at="2017-10-21T05:22:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.adactin.hotelapp.tests.AdactinLogin.LogValidateUserAndPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="stopMethod(org.testng.ITestResult)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopMethod" is-config="true" duration-ms="5691" started-at="2017-10-21T05:22:27Z" finished-at="2017-10-21T05:22:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogValidateUserAndPassword status=SUCCESS method=AdactinLogin.LogValidateUserAndPassword()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopMethod -->
        <test-method status="PASS" signature="LogValidateUserOnly()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="LogValidateUserOnly" duration-ms="550" started-at="2017-10-21T05:22:33Z" finished-at="2017-10-21T05:22:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogValidateUserOnly -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startMethod" is-config="true" duration-ms="0" started-at="2017-10-21T05:22:33Z" finished-at="2017-10-21T05:22:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.adactin.hotelapp.tests.AdactinLogin.LogValidateUserOnly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="stopMethod(org.testng.ITestResult)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopMethod" is-config="true" duration-ms="5721" started-at="2017-10-21T05:22:33Z" finished-at="2017-10-21T05:22:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LogValidateUserOnly status=SUCCESS method=AdactinLogin.LogValidateUserOnly()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopMethod -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startMethod" is-config="true" duration-ms="0" started-at="2017-10-21T05:22:39Z" finished-at="2017-10-21T05:22:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.adactin.hotelapp.tests.AdactinLogin.deafaultLoginTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="deafaultLoginTest()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="deafaultLoginTest" duration-ms="2490" started-at="2017-10-21T05:22:39Z" finished-at="2017-10-21T05:22:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deafaultLoginTest -->
        <test-method status="PASS" signature="stopMethod(org.testng.ITestResult)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopMethod" is-config="true" duration-ms="5662" started-at="2017-10-21T05:22:41Z" finished-at="2017-10-21T05:22:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deafaultLoginTest status=SUCCESS method=AdactinLogin.deafaultLoginTest()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopMethod -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startMethod" is-config="true" duration-ms="0" started-at="2017-10-21T05:22:47Z" finished-at="2017-10-21T05:22:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.adactin.hotelapp.tests.AdactinLogin.simpleLoginTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="simpleLoginTest(java.lang.String, java.lang.String)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="simpleLoginTest" duration-ms="1801" started-at="2017-10-21T05:22:47Z" data-provider="loginDataProvider" finished-at="2017-10-21T05:22:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[efrain583]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[efra12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleLoginTest -->
        <test-method status="PASS" signature="stopMethod(org.testng.ITestResult)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopMethod" is-config="true" duration-ms="5691" started-at="2017-10-21T05:22:49Z" finished-at="2017-10-21T05:22:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=simpleLoginTest status=SUCCESS method=AdactinLogin.simpleLoginTest(java.lang.String, java.lang.String)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopMethod -->
        <test-method status="FAIL" signature="simpleLoginTest(java.lang.String, java.lang.String)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="simpleLoginTest" duration-ms="1090" started-at="2017-10-21T05:22:55Z" data-provider="loginDataProvider" finished-at="2017-10-21T05:22:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[efrain583]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[efra1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[simpleLoginTest FAILED expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: simpleLoginTest FAILED expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at com.adactin.hotelapp.tests.AdactinLogin.simpleLoginTest(AdactinLogin.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleLoginTest -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startMethod" is-config="true" duration-ms="0" started-at="2017-10-21T05:22:55Z" finished-at="2017-10-21T05:22:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.adactin.hotelapp.tests.AdactinLogin.simpleLoginTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="stopMethod(org.testng.ITestResult)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopMethod" is-config="true" duration-ms="5981" started-at="2017-10-21T05:22:56Z" finished-at="2017-10-21T05:23:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=simpleLoginTest status=FAILURE method=AdactinLogin.simpleLoginTest(java.lang.String, java.lang.String)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopMethod -->
        <test-method status="PASS" signature="simpleLoginTest(java.lang.String, java.lang.String)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="simpleLoginTest" duration-ms="1340" started-at="2017-10-21T05:23:02Z" data-provider="loginDataProvider" finished-at="2017-10-21T05:23:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[efrain583]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[efra12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleLoginTest -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startMethod" is-config="true" duration-ms="0" started-at="2017-10-21T05:23:02Z" finished-at="2017-10-21T05:23:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.adactin.hotelapp.tests.AdactinLogin.simpleLoginTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="stopMethod(org.testng.ITestResult)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopMethod" is-config="true" duration-ms="5721" started-at="2017-10-21T05:23:03Z" finished-at="2017-10-21T05:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=simpleLoginTest status=SUCCESS method=AdactinLogin.simpleLoginTest(java.lang.String, java.lang.String)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopMethod -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="startMethod" is-config="true" duration-ms="0" started-at="2017-10-21T05:23:09Z" finished-at="2017-10-21T05:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.adactin.hotelapp.tests.AdactinLogin.simpleLoginTest(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="FAIL" signature="simpleLoginTest(java.lang.String, java.lang.String)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="simpleLoginTest" duration-ms="1080" started-at="2017-10-21T05:23:09Z" data-provider="loginDataProvider" finished-at="2017-10-21T05:23:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[efrain583]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[efra1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[simpleLoginTest FAILED expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: simpleLoginTest FAILED expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at com.adactin.hotelapp.tests.AdactinLogin.simpleLoginTest(AdactinLogin.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleLoginTest -->
        <test-method status="PASS" signature="stopMethod(org.testng.ITestResult)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopMethod" is-config="true" duration-ms="5911" started-at="2017-10-21T05:23:10Z" finished-at="2017-10-21T05:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=simpleLoginTest status=FAILURE method=AdactinLogin.simpleLoginTest(java.lang.String, java.lang.String)[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopMethod -->
        <test-method status="PASS" signature="stopClass()[pri:0, instance:com.adactin.hotelapp.tests.AdactinLogin@548b7f67]" name="stopClass" is-config="true" duration-ms="754" started-at="2017-10-21T05:23:16Z" finished-at="2017-10-21T05:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopClass -->
      </class> <!-- com.adactin.hotelapp.tests.AdactinLogin -->
    </test> <!-- AdactinRegressionBasic -->
  </suite> <!-- AdactinRegression -->
</testng-results>
